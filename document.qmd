---
title: "Power analysis for a 2x2 interaction"
format: html
output-file: index.html
fig-dpi: 600
webr: 
  show-startup-message: true
  packages: ['MASS', 'ggplot2']
  autoload-packages: true
filters:
  - webr
---

This is an interactive document to assess the power of a 2x2 interaction analysis for a linear model assuming a Gaussian family and a mixed design (i.e., one within-subjects factor and one between-subjects factor).

## Parameters

Here you set the parameters of the power analysis. For a 2x2 interaction with one within-subjects factor there are 12 parameters that need to be set. To simplify the analysis, you can assume that some parameters are identical to other parameters (e.g., set the same value for each standard deviation).

```{webr-r}
# Parameters
N_control <- 40
N_treatment <- 38
M_control_pre <- 3
M_treatment_pre <- 3
M_control_post <- 3
M_treatment_post <- 3.8
SD_control_pre <- 1
SD_treatment_pre <- 1
SD_control_post <- 1
SD_treatment_post <- 1
r_control <- 0.75
r_treatment <- 0.75

# Prepare parameters
mu_control <- c(M_control_pre, M_control_post)
mu_treatment <- c(M_treatment_pre, M_treatment_post)

Sigma_control <- matrix(
  ncol = 2, nrow = 2,
  c(
    SD_control_pre^2,
    SD_control_pre * SD_control_post * r_control,
    SD_control_pre * SD_control_post * r_control,
    SD_control_post^2
  )
)
Sigma_treatment <- matrix(
  ncol = 2, nrow = 2,
  c(
    SD_treatment_pre^2,
    SD_treatment_pre * SD_treatment_post * r_treatment,
    SD_control_pre * SD_control_post * r_control,
    SD_control_post^2
  )
)
```

## Visualize parameters

Here you can visualize the parameters. If you run the code chunk in this section, the data will be simulated once, producing a sample of the data that will exactly match the parameters. This data is visualized at the end so you can get a better grasp of the parameters (or at least the mean differences).

```{webr-r}
samples_control <- mvrnorm(
  N_control,
  mu = mu_control, Sigma = Sigma_control,
  empirical = TRUE
)
samples_treatment <- mvrnorm(
  N_treatment,
  mu = mu_treatment, Sigma = Sigma_treatment,
  empirical = TRUE
)

# Prepare data
colnames(samples_control) <- c("pre", "post")
colnames(samples_treatment) <- c("pre", "post")

data_control <- as.data.frame(samples_control)
data_treatment <- as.data.frame(samples_treatment)

data_control <- reshape(
  data_control,
  direction = "long",
  varying = c("pre", "post"),
  v.names = "DV",
  times = c("pre", "post")
)
data_treatment <- reshape(
  data_treatment,
  direction = "long",
  varying = c("pre", "post"),
  v.names = "DV",
  times = c("pre", "post")
)

data_control$condition <- "control"
data_treatment$condition <- "treatment"
data_treatment$id <- data_treatment$id + N_control

data <- rbind(data_control, data_treatment)
data$time <- factor(data$time, levels = c("pre", "post"))

ggplot(
  data,
  aes(
    x = time,
    y = DV,
    color = condition
  )
) +
  stat_summary(
    fun = "mean", geom = "point"
  ) +
  stat_summary(
    aes(group = condition),
    fun = "mean", geom = "line"
  ) +
  theme_minimal()
```

## Power analysis

Here we conduct the power analysis by repeatedly simulating (`s` times) data with the parameters previously specified. We extract the p-value for the interaction effect between time and condition and store it so we can calculate the power as the number of times a significant effect is obtained divided by the number of simulations (`s`). You can increase `s` to obtain a more precise estimate of the power.

```{webr-r}
s <- 1000
p_values <- vector(length = s)

for (i in 1:s) {
  samples_control <- mvrnorm(
    N_control,
    mu = mu_control, Sigma = Sigma_control,
    empirical = TRUE
  )
  samples_treatment <- mvrnorm(
    N_treatment,
    mu = mu_treatment, Sigma = Sigma_treatment,
    empirical = TRUE
  )

  # Prepare data
  colnames(samples_control) <- c("pre", "post")
  colnames(samples_treatment) <- c("pre", "post")

  data_control <- as.data.frame(samples_control)
  data_treatment <- as.data.frame(samples_treatment)

  data_control <- reshape(
    data_control,
    direction = "long",
    varying = c("pre", "post"),
    v.names = "DV",
    times = c("pre", "post")
  )
  data_treatment <- reshape(
    data_treatment,
    direction = "long",
    varying = c("pre", "post"),
    v.names = "DV",
    times = c("pre", "post")
  )

  data_control$condition <- "control"
  data_treatment$condition <- "treatment"
  data_treatment$id <- data_treatment$id + N_control

  data <- rbind(data_control, data_treatment)

  model <- lm(DV ~ condition * time, data = data)
  summary <- summary(model)

  p_values[i] <- coef(summary)[4, "Pr(>|t|)"]
}

power <- sum(p_values < .05) / s
paste0("Power of the interaction effect: ", power * 100, "%")
```